# vim: set ft=sh :

example() {
    echo "argument = $1"
}

dirsize() {
    find $1 -maxdepth 1 -type d -exec du -hs {} \; | sort -k 2
}

nvim-session() {
    nvim=$(which nvim)
    project_name=$(basename $PWD)
    if [ -f ~/.sessions/$project_name.vim ]; then
        $nvim "+OpenSession $project_name" $*
    else
        $nvim $*
    fi
}

tmain() {
    tmux ls &>/dev/null
    if [ $? -eq 0 ]; then
        tmux setenv -g background $background
        tmux source ~/.tmux.conf
    fi
    tmux new-session -A -s kdunaev-main
}

treload() {
    tmux ls &>/dev/null
    if [ $? -eq 0 ]; then
        tmux setenv -g background $background
        tmux source ~/.tmux.conf
        tmux run source ~/.backgroundrc background $background
        tmux run source ~/.promptrc ps1 $background
    fi
}

tssh() {
    ssh $* -t "LC_ALL= tmux new-session -A -s kdunaev-main"
}

light() {
    background light
    ps1 light
}

dark() {
    background dark
    ps1 dark
}

__git_svn_ps1() {
    local s=
    if [[ -d ".svn" ]] ; then
        local r=`__svn_rev`
        local b=`__svn_branch`
        s=" [$b:$r]"
    elif [[ -d .git ]] ; then
        s=`__git_ps1`
    fi
    echo -n "$s"
}

# Outputs the current trunk, branch, or tag
__svn_branch() {
    local url=
    if [[ -d .svn ]]; then
        url=`svn info | awk '/URL:/ {print $2}'`
        if [[ $url =~ trunk ]]; then
            echo trunk
        elif [[ $url =~ /branches/ ]]; then
            echo $url | sed -e 's#^.*/\(branches/.*\)/.*$#\1#'
        elif [[ $url =~ /tags/ ]]; then
            echo $url | sed -e 's#^.*/\(tags/.*\)/.*$#\1#'
        fi
    fi
}

# Outputs the current revision
__svn_rev() {
    local r=$(svn info | awk '/Revision:/ {print $2}')

    if [ ! -z $SVN_SHOWDIRTYSTATE ]; then
        local svnst flag
        svnst=$(svn status | grep '^\s*[?ACDMR?!]')
        [ -z "$svnst" ] && flag=*
        r=$r$flag
    fi
    echo $r
}
