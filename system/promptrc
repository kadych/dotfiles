# vim: set ft=sh :

# set variable identifying the chroot you work in (used in the prompt below)
# if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
#     debian_chroot=$(cat /etc/debian_chroot)
# fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|xterm-256color) color_prompt=yes;;
esac

case "$TERM" in
    xterm*|rxvt*) echo -ne "\033]0;Terminal\007";;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
        color_prompt=yes
    else
        color_prompt=
    fi
fi

ps1_light() {
    PS1="\[\e[0;34m\]\u@\h\[\e[0;33m\]:\[\e[0;32m\]\w\[\e[0;33m\]$(__git_ps1)\n\$\[\e[0;0m\] "
}

ps1_dark() {
    PS1="\[\e[0;34m\]\u@\h\[\e[0;33m\]:\[\e[0;32m\]\w\[\e[0;33m\]$(__git_ps1)\n\$\[\e[0;0m\] "
}

ps1_nocolor() {
    PS1="\u@\h:\w$(__git_ps1)\n\$ "
}

ps1() {
    case $1 in
    light) PROMPT_COMMAND=ps1_light
        ;;
    dark) PROMPT_COMMAND=ps1_dark
        ;;
    *) echo 'ps1 [dark|light]'
        ;;
    esac
}

if [ "$color_prompt" = yes ]; then
    PROMPT_COMMAND="ps1 $background"
else
    PROMPT_COMMAND=ps1_nocolor
fi

unset color_prompt force_color_prompt
